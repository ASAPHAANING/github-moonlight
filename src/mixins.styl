$i = !important
prop($p, $x...)
  +cache('x', $x, 'p', $p)
    if ($x is a 'call' || $x is a 'rgba' || $x == none)
      {$p} $x $i
/**
 * c <foreground> <border-color> <background>
 * use 0 to omit arguments
 */
c($x, $y = 0, $z = 0)
  prop 'color' $x
  prop 'border-color' $y
  prop 'background-color' $z
/**
 * v <fill> <stroke> <fill-important> <stroke-important>
 * use 0 to omit arguments
 */
v($x, $y = 0)
  prop 'fill'  $x
  prop 'stroke'  $y
caret($direction = 'bottom', $popupColor = $alt, $borderColor = $border)
  +cache('direction' + $direction)
    +cache('borderColor' + $borderColor)
      &::before
        border-{$direction}-color $borderColor
    +cache('popupColor' + $popupColor)
      &::after
        border-{$direction}-color $popupColor
bgi($x...)
  prop 'background-image' $x
bg($x...)
  prop 'background' $x
b($x...)
  prop 'border' $x
bc($x...)
  prop 'border-color' $x
bb($x...)
  prop 'border-bottom' $x
bbc($x...)
  prop 'border-bottom-color' $x
bt($x...)
  prop 'border-top' $x
btc($x...)
  prop 'border-top-color' $x
bl($x...)
  prop 'border-left'
blc($x...)
  prop 'border-left-color' $x
br($x...)
  prop 'border-right' $x
brc($x...)
  prop 'border-right-color' $x
by($x...)
  +cache('x', $x)
    bb $x
    bt $x
byc($x...)
  +cache('x', $x)
    bbc $x
    btc $x
bx($x...)
  +cache('x' + $x)
    bl $x
    br $x
bxc($x...)
  +cache('x' + $x)
    blc $x
    brc $x
r($x...)
  prop 'border-radius' $x
rtl($x...)
  prop 'border-top-left-radius' $x
rtr($x...)
  prop 'border-top-right-radius' $x
rb($x...)
  +cache('x' + $x)
    rbl $x
    rbr $x
rbl($x...)
  prop 'border-bottom-left-radius' $x
rbr($x...)
  prop 'border-bottom-right-radius' $x
rt($x...)
  +cache('x' + $x)
    rtl $x
    rtr $x
m($x...)
  prop 'margin' $x
mt($x...)
  prop 'margin-top' $x
mb($x...)
  prop 'margin-bottom' $x
ml($x...)
  prop 'margin-left' $x
mr($x...)
  prop 'margin-right' $x
my($x...)
  +cache('x' + $x)
    mt $x
    mb $x
mx($x...)
  +cache('x' + $x)
    ml $x
    mr $x
lh($x...)
  prop 'line-height'
p($x...)
  prop 'padding' $x
pt($x...)
  prop 'padding-top' $x
pb($x...)
  prop 'padding-bottom' $x
pl($x...)
  prop 'padding-left' $x
pr($x...)
  prop 'padding-right' $x
py($x...)
  +cache('x' + $x)
    pb $x
    pt $x
px($x...)
  +cache('x' + $x)
    pl $x
    pr $x
po($x...)
  prop 'position' $x
s($x...)
  prop 'box-shadow' $x
o($x...)
  prop 'opacity' $x
a($x...)
  prop 'animation' $x
tr($x...)
  prop 'transition' $x
ease($x...)
  +cache('x' + $x)
    tr $x 300ms $easeInOutCubic
fn($x...)
  prop 'font-family' $x
fs($x...)
  prop 'font-size' $x
fw($x...)
  prop 'font-weight' $x
td($x...)
  prop 'text-decoration' $x
sbc($x...)
  prop 'scrollbar-color' $x
sbw($x...)
  prop 'scrollbar-width' $x
size($w, $h = $w)
  +cache('h' + $h)
    height $h $i
  +cache('w' + $w)
    width $w $i
mono()
  fn $monoFont
inv()
  filter invert(1)
box()
  c 0 $border $alt
  ease border-color, background-color
  &:hover, &:focus
    c 0 $blue $hl
octicon($x...)
  +cache('x' + $x)
    .octicon
      c $x
s-1()
  s 0 2px 5px 0 rgba(black, 0.26)
s-2()
  s 0 4px 8px 0 rgba(black, 0.4)
